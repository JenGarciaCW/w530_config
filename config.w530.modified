Debian: Jessie

===============================================================
		Cross-Opencv
===============================================================


ACTION: Instalar compilador
$ sudo apt-get install build-essential 

ACTION: Agregar repositorio cross compilador
$ cd /etc/apt/sources.list.d/
$ ls -l
$ sudo nano crosstools.list
ACTION: Agregar 	
	deb http://emdebian.org/tools/debian jessie main

ACTION: Actualizar llaves
$ sudo apt-get install curl
$ curl http://emdebian.org/tools/debian/emdebian-toolchain-archive.key | sudo apt-key add -

ACTION: Instalar cross-compilador
$ sudo apt-get update 
$ sudo dpkg --add-architecture armhf
$ sudo apt-get install crossbuild-essential-armhf 

ACTION: Instalar prerequisitos opencv
$ sudo apt-get install build-essential
$ sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
$ sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev

ACTION: Descargar opencv
$ git clone https://github.com/Itseez/opencv.git
$ cd opencv/platforms/linux/
ACTION: Editar arm-gnueabi.toolchain.cmake y cambiar versión a 4.9

ACTION: Compilar e instalar opencv
$ mkdir -p build_hardfp
$ cd build_hardfp
$ cmake -DCMAKE_TOOLCHAIN_FILE=../arm-gnueabi.toolchain.cmake ../../..
$ make
$ sudo make install


================================================================
			Eclipse last
================================================================

ACTION: Descargar última versión de eclipse
ACTION: Descomprimir archivo 
# cd Downloads/
# tar xf eclipse*.tar.gz

ACTION: Mover y crear link simbólico
# mv eclipse /opt
# ln -s /opt/eclipse/eclipse /usr/local/bin/eclipse

================================================================
			Devices
================================================================
ACTION: Configurar DPI monitor
ACTION: Editar /etc/X11/xorg.conf y agregar en la sección
"Monitor" 
	Option         "DPI" "90x90"

ACTION: Control de brillo
# sudo apt-get install xbacklight

ACTION: Emulador ARM
$ sudo apt-get install qemu-user-static 

================================================================
			i3
================================================================

ACTION: Script problemas firmware
+crear firmscript.sh : echo reset > /proc/acpi/ibm/hotkey 
# mv firmscript.sh /opt
# ln -s /opt/firmscript.sh /usr/local/bin/firmscript

ACTION: Agregar comando a /etc/rc.local
# chmod 777 /proc/acpi/ibm/hotkey

ACTION: Crear archivo de configuración
# i3-config-wizard

ACTION: Habilitar teclas especiales añadiendo a ~/.i3/config

#Thinkpad
bindsym XF86AudioRaiseVolume exec amixer -q sset Master 5%+ unmute
bindsym XF86AudioLowerVolume  exec amixer -q sset Master 5%- unmute
bindsym XF86AudioMute exec amixer -q sset Master toggle

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# PrintScreen
bindsym Print exec xfce4-screenshooter -f -s /home/kevin/temp/

# Thunar
bindsym XF86Launch1 exec thunar

# Eclipse
bindsym XF86AudioMute exec eclipse

# nm-applet
exec nm-applet

# firmware correction
exec firmscript

================================================================
			Eclipse Config
================================================================
ACTION: Crear un proyecto nuevo en eclipse, de tipo cross linux
agregar al final de la configuración el prefijo
	arm-linux-gnueabi-
y en cross compiler path
	/usr/bin 

ACTION: Ir a Help>Install New Software y seleccionar el Release
de eclipse, ir a General Prupose Tools e instalar Remote 
System Explorer y Remote System Shell.

ACTION: Ir a Window>Show view> other> y seleccionar Remote 
Systems

ACTION: Agregar conexión con ssh y shell configurations

ACTION: Ir a Help>Install new software y agregar
	EGIT - http://download.eclipse.org/egit/updates
	Instalar todos los paquetes

ACTION: Ir a Window>Show view> other> y seleccionar Git Repos
ACTION: Clone Git Repository https://github.com/KevinArias/Enjambre_Kernel.git




================================================================
			OpenCV
================================================================
			python
================================================================
			Atom
================================================================
			Freecad
================================================================
			Arduino
================================================================
			Code Composer
================================================================
			Kicad
================================================================
			CUDA
================================================================
			ROS
================================================================
			jenkins
================================================================
			background grub
================================================================
			nodejs
================================================================
			Energia
================================================================
			LaTex
================================================================
			Octave
================================================================


	
	


$sudo ldconfig
